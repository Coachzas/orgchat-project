import React from "react";
import { useStateProvider } from "@/context/StateContext";
import { reducerCases } from "@/context/constants";
import Image from "next/image";

function IncomingCall() {
  const [{ incomingVoiceCall, socket }, dispatch] = useStateProvider();

  if (!incomingVoiceCall) return null;

  // ‚úÖ ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏î "‡∏£‡∏±‡∏ö‡∏™‡∏≤‡∏¢"
  const acceptCall = () => {
    if (!socket?.current || !incomingVoiceCall) return;

    console.log("‚úÖ [Receiver] ‡∏£‡∏±‡∏ö‡∏™‡∏≤‡∏¢‡∏à‡∏≤‡∏Å:", incomingVoiceCall.id);

    // üîπ ‡πÅ‡∏à‡πâ‡∏á server ‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏î‡∏£‡∏±‡∏ö‡∏™‡∏≤‡∏¢
    socket.current.emit("accept-incoming-call", {
      id: incomingVoiceCall.id,     // id ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÇ‡∏ó‡∏£ (caller)
      roomId: incomingVoiceCall.roomId, // ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô‡πÉ‡∏ô ZEGO
    });

    // üîπ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô state ‡∏ß‡πà‡∏≤‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏±‡∏ö‡∏™‡∏≤‡∏¢
    dispatch({
      type: reducerCases.SET_VOICE_CALL,
      voiceCall: {
        ...incomingVoiceCall,
        type: "in-coming",
        callAccepted: true,
      },
    });

    // üîπ ‡∏•‡πâ‡∏≤‡∏á popup ‡∏´‡∏•‡∏±‡∏á‡∏£‡∏±‡∏ö‡∏™‡∏≤‡∏¢
    dispatch({
      type: reducerCases.SET_INCOMING_VOICE_CALL,
      incomingVoiceCall: undefined,
    });
  };

  // ‚ùå ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏î "‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏™‡∏≤‡∏¢"
  const rejectCall = () => {
    if (!socket?.current || !incomingVoiceCall) return;

    console.log("‚ùå [Receiver] ‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏™‡∏≤‡∏¢‡∏à‡∏≤‡∏Å:", incomingVoiceCall.id);

    // ‡πÅ‡∏à‡πâ‡∏á server ‡∏ß‡πà‡∏≤‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏™‡∏≤‡∏¢
    socket.current.emit("reject-call", {
      from: incomingVoiceCall.id,  // id ‡∏Ç‡∏≠‡∏á caller
      roomId: incomingVoiceCall.roomId,
    });

    // ‡∏•‡πâ‡∏≤‡∏á state ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    dispatch({ type: reducerCases.END_CALL });
    dispatch({
      type: reducerCases.SET_INCOMING_VOICE_CALL,
      incomingVoiceCall: undefined,
    });
  };

  return (
    <div className="h-24 w-80 fixed bottom-8 right-6 z-50 rounded-md flex gap-5 items-center justify-start p-4 bg-conversation-panel-background text-white shadow-2xl border border-green-500/50 backdrop-blur-lg">
      {/* ‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå */}
      <div>
        <Image
          src={incomingVoiceCall.profilePicture || "/default-profile.png"}
          alt="avatar"
          width={70}
          height={70}
          className="rounded-full border border-gray-700"
        />
      </div>

      {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≤‡∏¢‡πÄ‡∏Ç‡πâ‡∏≤ */}
      <div className="flex flex-col">
        <div className="font-semibold text-base">
          {incomingVoiceCall.firstName} {incomingVoiceCall.lastName}
        </div>
        <div className="text-xs text-gray-400 italic">üìû Incoming Voice Call</div>

        {/* ‡∏õ‡∏∏‡πà‡∏°‡∏ï‡∏≠‡∏ö‡∏£‡∏±‡∏ö / ‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò */}
        <div className="flex gap-2 mt-3">
          <button
            className="bg-red-500 hover:bg-red-600 p-1 px-3 text-sm rounded-full transition"
            onClick={rejectCall}
          >
            Reject
          </button>

          <button
            className="bg-green-500 hover:bg-green-600 p-1 px-3 text-sm rounded-full transition"
            onClick={acceptCall}
          >
            Accept
          </button>
        </div>
      </div>
    </div>
  );
}

export default IncomingCall;
