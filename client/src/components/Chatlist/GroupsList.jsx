import React, { useEffect, useState } from "react";
import { BiArrowBack, BiSearchAlt2 } from "react-icons/bi";
import { useStateProvider } from "@/context/StateContext";
import { reducerCases } from "@/context/constants";
import GroupModal from "./GroupModal";
import axios from "axios";
import { GET_GROUP_MESSAGES_ROUTE } from "@/utils/ApiRoutes"; // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° import ‡∏ó‡∏µ‡πà‡∏´‡∏≤‡∏¢‡πÑ‡∏õ

function GroupsList() {
  const [searchTerm, setSearchTerm] = useState("");
  const [groups, setGroups] = useState([]);
  const [filteredGroups, setFilteredGroups] = useState([]);
  const [showModal, setShowModal] = useState(false);
  const [{ userInfo, socket }, dispatch] = useStateProvider();

  // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏•‡∏∏‡πà‡∏°
  useEffect(() => {
    const fetchGroups = async () => {
      try {
        const res = await axios.get("http://localhost:3005/api/groups", {
          withCredentials: true,
        });
        console.log("üì¶ ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏î‡∏∂‡∏á‡πÑ‡∏î‡πâ:", res.data);
        setGroups(res.data);
        setFilteredGroups(res.data);
      } catch (err) {
        console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°:", err);
      }
    };
    fetchGroups();
  }, []);

  // ‚úÖ ‡∏ü‡∏¥‡∏•‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ï‡∏≤‡∏°‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô
  useEffect(() => {
    if (searchTerm.length) {
      const filtered = groups.filter((group) =>
        group.name.toLowerCase().includes(searchTerm.toLowerCase())
      );
      setFilteredGroups(filtered);
    } else {
      setFilteredGroups(groups);
    }
  }, [searchTerm, groups]);

  const handleBack = () => {
    dispatch({ type: reducerCases.SET_GROUPS_PAGE, payload: false });
  };

  // ‚úÖ ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°
  const handleSelectGroup = async (group) => {
    console.log("üî• ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°:", group.name, "(ID:", group.id, ")");
    try {
      // üßπ ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå state ‡πÄ‡∏Å‡πà‡∏≤‡∏≠‡∏≠‡∏Å‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏±‡∏ô‡∏ã‡πâ‡∏≠‡∏ô
      dispatch({ type: reducerCases.SET_MESSAGES, messages: [] });
      dispatch({ type: reducerCases.CHANGE_CURRENT_CHAT_USER, user: undefined });

      // üì• ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏à‡∏≤‡∏Å backend
      const res = await axios.get(GET_GROUP_MESSAGES_ROUTE(group.id), {
        withCredentials: true,
      });

      console.log("üì® ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏î‡πâ:", res.data);

      // üß† ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ group ‡πÉ‡∏´‡∏°‡πà + messages ‡πÉ‡∏´‡∏°‡πà
      dispatch({ type: reducerCases.SET_CURRENT_GROUP, group });
      dispatch({ type: reducerCases.SET_MESSAGES, messages: res.data });
      dispatch({ type: reducerCases.SET_GROUPS_PAGE, payload: false });

      // ‚úÖ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á group ‡∏î‡πâ‡∏ß‡∏¢ socket.io
      if (socket?.current) {
        socket.current.emit("join-group", group.id);
        console.log(`‚úÖ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á group_${group.id} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`);
      }
    } catch (err) {
      console.error("‚ùå ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", err);
    }
  };

  return (
    <div className="h-full flex flex-col">
      {/* Header */}
      <div className="h-24 flex items-end px-3 py-4">
        <div className="flex items-center gap-12 text-white">
          <BiArrowBack className="cursor-pointer text-xl" onClick={handleBack} />
          <span>‡πÅ‡∏ä‡∏ó‡∏Å‡∏•‡∏∏‡πà‡∏°</span>
        </div>
      </div>

      {/* ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏•‡∏∏‡πà‡∏° */}
      <div className="bg-search-input-container-background h-full flex-auto overflow-auto custom-scrollbar">
        {/* ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ */}
        <div className="flex py-3 items-center gap-3 h-14">
          <div className="bg-panel-header-background flex items-center gap-5 px-5 py-1 rounded-lg flex-grow mx-4">
            <BiSearchAlt2 className="text-panel-header-icon text-xl" />
            <input
              type="text"
              placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏ä‡∏ó‡∏Å‡∏•‡∏∏‡πà‡∏°"
              className="bg-transparent text-sm focus:outline-none text-white w-full"
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
            />
          </div>
        </div>

        {/* ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ */}
        <div className="px-5 text-white">
          {filteredGroups.length === 0 && (
            <p className="text-secondary text-sm mt-4">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏•‡∏∏‡πà‡∏°</p>
          )}

          {filteredGroups.map((group) => (
            <div
              key={group.id}
              className="py-2 px-4 hover:bg-background-default-hover rounded cursor-pointer"
              onClick={() => handleSelectGroup(group)}
            >
              <p className="font-medium">{group.name}</p>
              <p className="text-secondary text-sm">
                {group.about || "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏Å‡∏•‡∏∏‡πà‡∏°"}
              </p>
            </div>
          ))}

          {/* ‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏° */}
          <div className="mt-6">
            <button
              onClick={() => setShowModal(true)}
              className="bg-teal-light text-white px-4 py-2 rounded-xl text-sm hover:opacity-90 flex items-center gap-2"
            >
              ‚ûï ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ä‡∏ó‡∏Å‡∏•‡∏∏‡πà‡∏°
            </button>
          </div>
        </div>
      </div>

      {/* Modal */}
      {showModal && <GroupModal onClose={() => setShowModal(false)} />}
    </div>
  );
}

export default GroupsList;
